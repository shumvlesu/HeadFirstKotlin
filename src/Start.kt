fun main() {

    val animals = arrayOf(Hippo(), Wolf())
    for (item in animals) {
        item.roam()
        item.eat()
    }
    val vet = Vet()
    val wolf = Wolf()
    val hippo = Hippo()
    vet.giveShot(wolf)
    vet.giveShot(hippo)

}

//*  Супер класс содержит общие свойства и функции, наследуемые одним или несколькими подклассами.

//*  Подкласс может включать дополнительные свойства и функции, не входящие в супер класс, а также переопределять унаследованные аспекты.

//* «Правило ЯВЛЯЕТСЯ» проверяет правильность структуры наследования. Если X является подклассом Y, то утверждение
//«X ЯВЛЯЕТСЯ Y» должно иметь смысл.

//*  Отношения ЯВЛЯЕТСЯ работают в одном направлении. Hippo является Animal, но не
//все объекты Animal являются Hippo.

//*  Если класс B является подклассом класса A,
//а класс C является подклассом класса B, то класс C проходит «правило ЯВЛЯЕТСЯ» как для B, так и для A.

//* Чтобы использовать класс в качестве суперкласса, необходимо объявить его открытым
//(open). Все свойства и функции, которые вы хотите переопределить, также должны быть объявлены открытыми.

//*  Используйте : для назначения суперкласса в объявлении подкласса.

//*  Если у суперкласса имеется первичный конструктор, он должен вызываться в заголовке
//подкласса.

//*  Чтобы переопределить свойства и функции в подклассе, снабдите их префиксом
//override. Когда вы переопределяете свойство, его тип должен быть совместим со свойством супер класса, а тип возвращаемого
//значения должен быть совместим с возвращаемым типом супер класса.

//*  Переопределенные функции и свойства остаются открытыми до тех пор, пока не будут
//объявлены final.

//*  Если вы переопределяете функцию в подклaссе, а эта функция вызывается для экземпляра подкласса, будет вызвана
// переопределенная версия функции.

//*  Наследование гарантирует, что все подклассы содержат функции и свойства, определенные в супер классе.

//* Подкласс может использоваться в любом месте, в котором предполагается использование
//типа суперкласса.

//*  Полиморфизм означает «много форм». Благодаря этому механизму разные подклассы
//могут содержать разные реализации одной функции.